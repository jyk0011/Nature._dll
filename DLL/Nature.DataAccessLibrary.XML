<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Nature.DataAccessLibrary</name>
    </assembly>
    <members>
        <member name="T:Nature.Data.DalCollection">
            <summary>
            数据访问函数库实例的集合
            </summary>
            user:jyk
            time:2012/9/13 14:08
        </member>
        <member name="P:Nature.Data.DalCollection.DalCustomer">
            <summary>
            用于访问客户项目的数据库
            </summary>
            <value>
            访问数据库的实例
            </value>
            user:jyk
            time:2012/9/5 10:52
        </member>
        <member name="P:Nature.Data.DalCollection.DalMetadata">
            <summary>
            用于访问存放元数据（配置信息）的数据库
            </summary>
            <value>
            访问数据库的实例
            </value>
            user:jyk
            time:2012/9/5 10:52
        </member>
        <member name="P:Nature.Data.DalCollection.DalRole">
            <summary>
            用于访问存放角色信息、角色分配信息的数据库
            </summary>
            <value>
            访问数据库的实例
            </value>
            user:jyk
            time:2012/9/5 10:52
        </member>
        <member name="P:Nature.Data.DalCollection.DalUser">
            <summary>
            用于访问登录用户信息的数据库
            </summary>
            <value>
            访问数据库的实例
            </value>
            user:jyk
            time:2012/9/5 10:52
        </member>
        <member name="T:Nature.Data.DataAccessLibrary">
            <summary>
            数据访问函数库的主体部分。属性、初始化、析构、内部共用函数。
            </summary>
            <summary>
            数据访问函数库，基础功能部分
            </summary>
        </member>
        <member name="F:Nature.Data.DataAccessLibrary._connectionString">
            <summary>
            当不使用web.config里面设置的连接字符串的时候使用
            </summary>
        </member>
        <member name="F:Nature.Data.DataAccessLibrary._dbProvider">
            <summary>
            如果不使用Webconfig里面的数据库驱动的话，需要使用这个。
            </summary>
        </member>
        <member name="F:Nature.Data.DataAccessLibrary._errorMessage">
            <summary>
            出现异常时，记录出错信息，包括访问的网页、SQL语句、错误原因、访问时间等
            对于外部（调用者）来说是只读的，而对于内部或者子类来说是可以写入的，所以protected
            </summary>
        </member>
        <member name="F:Nature.Data.DataAccessLibrary._executeRowCount">
            <summary>
            获取执行SQL查询语句后影响的行数。select语句无效。
            对于外部（调用者）来说是只读的，而对于内部或者子类来说是可以写入的，所以protected
            </summary>
        </member>
        <member name="M:Nature.Data.DataAccessLibrary.#ctor">
            <summary>
            初始化。使用web.config里的配置。
            </summary>
        </member>
        <member name="M:Nature.Data.DataAccessLibrary.#ctor(System.String,System.String)">
            <summary>
            不使用默认的数据库类型的时候使用
            </summary>
            <param name="connectionString">连接字符串</param>
            <param name="providerName">数据库驱动的名称。System.Data.SqlClient、System.Data.OleDb 、System.Data.Odbc、System.Data.OracleClient等</param>
        </member>
        <member name="M:Nature.Data.DataAccessLibrary.Finalize">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:Nature.Data.DataAccessLibrary.SetCommand(System.String)">
            <summary>
            设置Command的CommandText和CommandType
            </summary>
            <param name="commandText"></param>
        </member>
        <member name="M:Nature.Data.DataAccessLibrary.ConnectionOpen">
            <summary>
            在使用DataReader或者开始事务的时候，需要手动打开连接。
            注意：DataReader使用完毕之后必须手动关闭连接。
            </summary>
        </member>
        <member name="M:Nature.Data.DataAccessLibrary.ConnectionClose">
            <summary>
            在未开启事务的情况下，关闭连接。
            注意：DataReader使用完毕之后必须手动关闭连接。
            </summary>
        </member>
        <member name="M:Nature.Data.DataAccessLibrary.SetError(System.String,System.String,System.String,System.String)">
            <summary>
            当发生异常时，所做的处理。
            </summary>
            <param name="functionName">函数名称</param>
            <param name="commandText">查询语句或者存储过程</param>
            <param name="message">错误信息</param>
            <param name="cn">连接字符串</param>
        </member>
        <member name="M:Nature.Data.DataAccessLibrary.AddLogError(System.String)">
            <summary>
            把错误描述信息记录在文本文件里。
            </summary>
            <param name="errorDescribe">描述信息，即保存到日志文件里的信息</param>
        </member>
        <member name="M:Nature.Data.DataAccessLibrary.ParameterPrefix">
            <summary>
            设置存储过程的参数名称的前缀。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nature.Data.DataAccessLibrary.ColumnLeft">
            <summary>
            设置字段名左面的符号。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nature.Data.DataAccessLibrary.ColumnRight">
            <summary>
            设置字段名右面的符号。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nature.Data.DataAccessLibrary.ExecuteReader(System.String)">
            <summary>
            运行SQL语句、参数化的SQL语句或者存储过程，返回ExecuteReader。使用完毕后，需要手动关闭连接。
            </summary>
            <param name="text">查询语句或者存储过程的名称。
            比如select * from tableName1 
            或者 Proc_xxxGetDataSet
            </param>
            <returns></returns>
        </member>
        <member name="M:Nature.Data.DataAccessLibrary.ExecuteString(System.String)">
            <summary>
            运行SQl语句返回第一条记录的第一个字段的值。
            </summary>
            <param name="text">查询语句。
            比如select top 1 userName from tableName where ID=3。返回userName字段的内容。
            适合字符串类型的字段</param>
            <returns></returns>
        </member>
        <member name="M:Nature.Data.DataAccessLibrary.ExecuteString(System.String,System.String)">
            <summary>
            运行SQl语句返回第一条记录的第一个字段的值。区分内部函数调用的情况
            </summary>
            <param name="text">SQL语句，或者参数化的SQL语句</param>
            <param name="functionName">函数名称。日志里需要这个名称，用于调试</param>
            <returns></returns>
        </member>
        <member name="M:Nature.Data.DataAccessLibrary.ExecuteScalar``1(System.String)">
            <summary>
            运行SQl语句返回第一条记录的第一个字段的值。采用泛型作为返回值类型。
            </summary>
            <param name="text">SQL语句，或者参数化的SQL语句</param>
            <returns></returns>
        </member>
        <member name="M:Nature.Data.DataAccessLibrary.ExecuteNonQuery(System.String)">
            <summary>
            运行SQL查询语句，不返回记录集。用于添加、修改、删除等操作
            </summary>
            <param name="sql">查询语句。比如insert into tableName 、update tableName...</param>
            <returns></returns>
        </member>
        <member name="M:Nature.Data.DataAccessLibrary.ExecuteNonQuery(System.String,System.String)">
            <summary>
            运行SQL语句，不返回记录集。用于添加、修改、删除等操作。 
            </summary>
            <param name="sql">查询语句。比如insert into tableName 、update tableName...、delete from 等</param>
            <param name="functionName">函数名称，需要知道确切的调用的函数名称</param>
            <returns></returns>
        </member>
        <member name="M:Nature.Data.DataAccessLibrary.ExecuteExists(System.String)">
            <summary>
            执行一条SQL语句，看是否能查到记录 有：返回true；没有返回false，用于判断是否重名
            </summary>
            <param name="sql">查询语句。比如select ID from tableName where userName='aa'</param>
            <returns></returns>
        </member>
        <member name="M:Nature.Data.DataAccessLibrary.ExecuteFillWebList2(System.String,Nature.Data.Model.WebList2Format)">
            <summary>
            运行SQl语句返回 实体类WebList2集合
            </summary>
            <param name="sql">查询语句。比如select myName from tableName</param>
            <param name="lstFormat">标题的最大字符数、内容简介的最大字符数，一个汉字按照两个字符计算。传入“0”则表示不截取标题。发表时间的格式化。</param>
            <returns>返回WebList2结构的集合。URL，标题，时间，人气，图片名</returns>
        </member>
        <member name="M:Nature.Data.DataAccessLibrary.ExecuteFillDataSet(System.String)">
            <summary>
            运行SQL语句、参数化的SQL语句或者存储过程，返回DataSet。
            可以传入多条查询语句，返回的DataSet里会有多个DataTable
            </summary>
            <param name="text">查询语句或者存储过程的名称。
            比如select * from tableName1 select * from tableName2
            或者 Proc_xxxGetDataSet
            </param>
            <returns>返回DataSet</returns>
        </member>
        <member name="M:Nature.Data.DataAccessLibrary.ExecuteFillDataTable(System.String)">
            <summary>
            运行SQL语句、参数化的SQL语句或者存储过程，返回DataTable记录集
            </summary>
            <param name="text">查询语句或者存储过程的名称。
            比如select * from tableName1 
            或者 Proc_xxxGetDataTable
            </param>
            <returns></returns>
        </member>
        <member name="M:Nature.Data.DataAccessLibrary.ExecuteStringsByColumns(System.String)">
            <summary>
            运行SQl语句返回每一条记录的第一个字段的值。返回字符串数组
            </summary>
            <param name="text">查询语句。比如select myName from tableName</param>
            <returns></returns>
        </member>
        <member name="M:Nature.Data.DataAccessLibrary.ExecuteStringsBySingleRow(System.String)">
            <summary>
            运行SQl语句返回第一条记录的数组。返回字符串数组
            </summary>
            <param name="text">查询语句。比如select top 1 * from tableName</param>
            <returns></returns>
        </member>
        <member name="P:Nature.Data.DataAccessLibrary.Command">
            <summary>
            一个DbCommand， 数据访问类库的核心
            </summary>
        </member>
        <member name="P:Nature.Data.DataAccessLibrary.ConnectionString">
            <summary>
            获取或者修改连接字符串
            </summary>
        </member>
        <member name="P:Nature.Data.DataAccessLibrary.ProviderName">
            <summary>
            读取或者设置连接数据库的驱动名称
            </summary>
        </member>
        <member name="P:Nature.Data.DataAccessLibrary.DataType">
            <summary>
            读取或者设置连接数据库的驱动名称
            </summary>
        </member>
        <member name="P:Nature.Data.DataAccessLibrary.DatabaseProvider">
            <summary>
            获取DbProvider
            </summary>
        </member>
        <member name="P:Nature.Data.DataAccessLibrary.ErrorMessage">
            <summary>
            获取出错信息，没有错误的话返回string.Empty 
            </summary>
        </member>
        <member name="P:Nature.Data.DataAccessLibrary.ExecuteRowCount">
            <summary>
            获取执行SQL语句影响的行数，select语句无效。
            </summary>
        </member>
        <member name="P:Nature.Data.DataAccessLibrary.IsUseTrans">
            <summary>
            标记是否已经启用了ado.net 事务
            </summary>
        </member>
        <member name="P:Nature.Data.DataAccessLibrary.ManagerTran">
            <summary>
            加载处理存储过程参数的实例。用这个实例来添加存储过程的参数
            </summary>
        </member>
        <member name="P:Nature.Data.DataAccessLibrary.SelectData">
            <summary>
            返回记录集的部分，返回DataTable，string[]等
            </summary>
        </member>
        <member name="P:Nature.Data.DataAccessLibrary.ManagerJson">
            <summary>
            加载 返回Json形式记录集 的实例。用这个实例来返回Json形式记录集
            </summary>
        </member>
        <member name="P:Nature.Data.DataAccessLibrary.ManagerWebModel">
            <summary>
            加载页面列表实体类（WebList）的管理部分。用这个实例来填充页面列表实体类（WebList）。
            </summary>
        </member>
        <member name="P:Nature.Data.DataAccessLibrary.ManagerParameter">
            <summary>
            加载处理存储过程参数管理的实例。用这个实例来添加存储过程的参数
            </summary>
        </member>
        <member name="P:Nature.Data.DataAccessLibrary.ModifyData">
            <summary>
            处理添加、修改的管理的实例。用这个实例来实现添加、修改数据。
            </summary>
        </member>
        <member name="P:Nature.Data.DataAccessLibrary.IsLogData">
            <summary>
            读取或者设置连接数据库的驱动名称
            </summary>
        </member>
        <member name="T:Nature.Data.OdbcDal">
            <summary>
            ODBC的驱动方式
            </summary>
        </member>
        <member name="M:Nature.Data.OdbcDal.#ctor">
            <summary>
            子类的构造函数，调用父类的构造函数
            </summary>
        </member>
        <member name="M:Nature.Data.OdbcDal.#ctor(System.String,System.String)">
            <summary>
            子类的构造函数，调用父类的构造函数
            </summary>
            <param name="connectionString">连接字符串</param>
            <param name="providerName">数据库驱动的名称。System.Data.SqlClient、System.Data.OleDb 、System.Data.Odbc、System.Data.OracleClient等</param>
        </member>
        <member name="M:Nature.Data.OdbcDal.ParameterPrefix">
            <summary>
            设置存储过程的参数名称的前缀。Odbc的返回“?”
            </summary>
            <returns></returns>
        </member>
        <member name="T:Nature.Data.OleDbDal">
            <summary>
            OleDb的驱动方式
            </summary>
        </member>
        <member name="M:Nature.Data.OleDbDal.#ctor">
            <summary>
            子类的构造函数，调用父类的构造函数
            </summary>
        </member>
        <member name="M:Nature.Data.OleDbDal.#ctor(System.String,System.String)">
            <summary>
            子类的构造函数，调用父类的构造函数
            </summary>
            <param name="connectionString">连接字符串</param>
            <param name="providerName">数据库驱动的名称。System.Data.SqlClient、System.Data.OleDb 、System.Data.Odbc、System.Data.OracleClient等</param>
        </member>
        <member name="M:Nature.Data.OleDbDal.ParameterPrefix">
            <summary>
            设置存储过程的参数名称的前缀。OleDb的返回“@”
            </summary>
            <returns></returns>
        </member>
        <member name="T:Nature.Data.OracleClientDal">
            <summary>
            OracleClient的驱动方式
            </summary>
        </member>
        <member name="M:Nature.Data.OracleClientDal.#ctor">
            <summary>
            子类的构造函数，调用父类的构造函数
            </summary>
        </member>
        <member name="M:Nature.Data.OracleClientDal.#ctor(System.String,System.String)">
            <summary>
            子类的构造函数，调用父类的构造函数
            </summary>
            <param name="connectionString">连接字符串</param>
            <param name="providerName">数据库驱动的名称。System.Data.SqlClient、System.Data.OleDb 、System.Data.Odbc、System.Data.OracleClient等</param>
        </member>
        <member name="M:Nature.Data.OracleClientDal.ParameterPrefix">
            <summary>
            设置存储过程的参数名称的前缀。Orcale返回“:”
            </summary>
            <returns></returns>
        </member>
        <member name="T:Nature.Data.Part.DataLog">
            <summary>
            数据修改日志的属性
            </summary>
        </member>
        <member name="P:Nature.Data.Part.DataLog.ModuleID">
            <summary>
            模块ID
            </summary>
        </member>
        <member name="P:Nature.Data.Part.DataLog.PageVIewID">
            <summary>
            依据哪个视图做的操作
            </summary>
        </member>
        <member name="P:Nature.Data.Part.DataLog.ButtonID">
            <summary>
            哪个按钮触发的
            </summary>
        </member>
        <member name="P:Nature.Data.Part.DataLog.DataID">
            <summary>
            操作的记录ID
            </summary>
        </member>
        <member name="P:Nature.Data.Part.DataLog.UserID">
            <summary>
            谁修改的
            </summary>
        </member>
        <member name="P:Nature.Data.Part.DataLog.IP">
            <summary>
            IP
            </summary>
        </member>
        <member name="P:Nature.Data.Part.DataLog.DataUrl">
            <summary>
            申请的URL
            </summary>
        </member>
        <member name="T:Nature.Data.SqlClientDal">
            <summary>
            SqlClient的驱动方式
            </summary>
        </member>
        <member name="M:Nature.Data.SqlClientDal.#ctor">
            <summary>
            子类的构造函数，调用父类的构造函数
            </summary>
        </member>
        <member name="M:Nature.Data.SqlClientDal.#ctor(System.String,System.String)">
            <summary>
            子类的构造函数，调用父类的构造函数
            </summary>
            <param name="connectionString">连接字符串</param>
            <param name="providerName">数据库驱动类型的名称。System.Data.SqlClient、System.Data.OleDb、System.Data.Odbc、System.Data.OracleClient 等</param>
        </member>
        <member name="T:Nature.Data.Part.ManagerJson">
            <summary>
            把记录集转换成Json的格式的配件
            </summary>
        </member>
        <member name="F:Nature.Data.Part.ManagerJson._dal">
            <summary>
            数据访问函数库的实例，主要是想操作Connection
            </summary>
        </member>
        <member name="M:Nature.Data.Part.ManagerJson.#ctor(Nature.Data.DataAccessLibrary)">
            <summary>
            初始化
            </summary>
            <param name="dal">数据访问函数库的实例</param>
        </member>
        <member name="M:Nature.Data.Part.ManagerJson.ExecuteFillJsonByColName(System.String)">
            <summary>
            运行SQL语句、参数化的SQL语句或者存储过程，返回json格式的记录集。
            字段名作为key，字段值作为value。
            </summary>
            <param name="text">查询语句或者存储过程的名称。
            比如select * from tableName1 
            或者 Proc_xxxGetDataTable
            </param>
            <returns></returns>
        </member>
        <member name="M:Nature.Data.Part.ManagerJson.ExecuteFillJsonByColNameKey(System.String)">
            <summary>
            运行SQL语句、参数化的SQL语句或者存储过程，返回json格式的记录集。
            字段名作为key，字段值作为value。
            </summary>
            <param name="text">查询语句或者存储过程的名称。
            比如select * from tableName1 
            或者 Proc_xxxGetDataTable
            </param>
            <returns></returns>
        </member>
        <member name="M:Nature.Data.Part.ManagerJson.ExecuteFillJsonByRoleArrorID(System.String)">
            <summary>
            运行SQL语句、参数化的SQL语句或者存储过程，返回json格式的记录集。
            字段名作为key，字段值作为value。
            </summary>
            <param name="text">查询语句或者存储过程的名称。
            比如select * from tableName1 
            或者 Proc_xxxGetDataTable
            </param>
            <returns></returns>
        </member>
        <member name="P:Nature.Data.Part.ManagerJson.JsonName">
            <summary>
            json的名称，默认data
            </summary>
            <value>
            json的名称
            </value>
            user:jyk
            time:2012/10/23 9:36
        </member>
        <member name="T:Nature.Data.Part.ManagerParameter">
            <summary>
            处理存储过程的参数
            </summary>
        </member>
        <member name="F:Nature.Data.Part.ManagerParameter._dal">
            <summary>
            数据访问函数库的实例。
            </summary>
        </member>
        <member name="M:Nature.Data.Part.ManagerParameter.#ctor(Nature.Data.DataAccessLibrary)">
            <summary>
            初始化，设置数据访问实例，把主体和扩展关联起来。
            </summary>
            <param name="dal">数据访问函数库的实例</param>
        </member>
        <member name="M:Nature.Data.Part.ManagerParameter.ClearParameter">
            <summary>
            清除Command的存储过程的参数。
            </summary>
        </member>
        <member name="M:Nature.Data.Part.ManagerParameter.AddNewInParameter(System.String,System.Object)">
            <summary>
            添加输入型的参数，不用指定参数大小的情况。只支持常用的几个参数类型，如果需要可以扩充。
            </summary>
            <param name="parameterName">参数名称。比如 UserName。注意：参数名称不需要加前缀！</param>
            <param name="parameterValue">参数值</param>
        </member>
        <member name="M:Nature.Data.Part.ManagerParameter.AddNewInParameter(System.String,System.Object,System.Int32)">
            <summary>
            添加输入型的参数，nvarchar、carchar、nchar、cahr需要设置参数大小的情况。
            </summary>
            <param name="parameterName">参数名称。比如 UserName。注意：参数名称不需要加前缀！</param>
            <param name="parameterValue">参数值</param>
            <param name="parameterSize">参数的大小</param>
        </member>
        <member name="M:Nature.Data.Part.ManagerParameter.AddNewOutParameter(System.String,System.Data.DbType)">
            <summary>
            添加输出型的参数。只支持常用的几个参数类型，如果需要可以扩充。
            </summary>
            <param name="parameterName">参数名称。比如 UserName。注意：参数名称不需要加前缀！</param>
            <param name="dbType">参数的类型</param>
        </member>
        <member name="M:Nature.Data.Part.ManagerParameter.GetParameter``1(System.Int32)">
            <summary>
            按序号返回参数值，一般在执行完存储过程后使用
            </summary>
            <param name="parameterIndex">序号</param>
            <returns>返回参数的内容</returns>
        </member>
        <member name="M:Nature.Data.Part.ManagerParameter.GetParameter``1(System.String)">
            <summary>
            按名称返回参数值，一般在执行完存储过程后使用
            </summary>
            <param name="parameterName">参数名称。比如 UserName。注意：参数名称不需要加前缀（比如@）！</param>
            <returns>返回参数的内容</returns>
        </member>
        <member name="M:Nature.Data.Part.ManagerParameter.SetParameter``1(System.Int32,``0)">
            <summary>
            按序号修改参数值，一般在一次添加多条记录时用。
            </summary>
            <param name="parameterIndex">序号</param>
            <param name="parameterValue">值</param>
        </member>
        <member name="M:Nature.Data.Part.ManagerParameter.SetParameter``1(System.String,``0)">
            <summary>
            按名称修改参数值，一般在一次添加多条记录时用
            </summary>
            <param name="parameterName">参数名称。比如 UserName。注意：参数名称不需要加前缀！</param>
            <param name="parameterValue">值</param>
        </member>
        <member name="P:Nature.Data.Part.ManagerParameter.Item(System.String)">
            <summary>
            对存储过程的参数的一种封装
            </summary>
            <param name="parameterName">存储过程的参数名称。比如 UserName。注意：参数名称不需要加前缀！</param>
            <returns></returns>
        </member>
        <member name="P:Nature.Data.Part.ManagerParameter.Item(System.Int32)">
            <summary>
            对存储过程的参数的一种封装
            </summary>
            <param name="parameterIndex">存储过程的参数的序号</param>
            <returns></returns>
        </member>
        <member name="P:Nature.Data.Part.ManagerParameter.Count">
            <summary>
            返回参数的数量
            </summary>
            2013-5-3 添加by金洋
        </member>
        <member name="T:Nature.Data.Part.ManagerTran">
            <summary>
            关于事务的封装
            </summary>
        </member>
        <member name="F:Nature.Data.Part.ManagerTran._dal">
            <summary>
            数据访问函数库的实例，主要是想操作Connection
            </summary>
        </member>
        <member name="F:Nature.Data.Part.ManagerTran._dbTran">
            <summary>
            用于事务处理
            </summary>
        </member>
        <member name="M:Nature.Data.Part.ManagerTran.#ctor(Nature.Data.DataAccessLibrary)">
            <summary>
            初始化，设置内部的数据访问实例，管理主体和扩展。
            </summary>
            <param name="dal">数据访问函数库的实例</param>
        </member>
        <member name="M:Nature.Data.Part.ManagerTran.TranBegin">
            <summary>
            打开连接，并且开始事务。
            </summary>
        </member>
        <member name="M:Nature.Data.Part.ManagerTran.TranCommit">
            <summary>
            提交事务，并关闭连接
            </summary>
        </member>
        <member name="M:Nature.Data.Part.ManagerTran.TranRollBack">
            <summary>
            回滚事务，并关闭连接。在程序出错的时候，自动调用。
            </summary>
        </member>
        <member name="T:Nature.Data.Part.ManagerWebModel">
            <summary>
            管理网页里用的几个实体类，填充实体类的几个函数
            </summary>
        </member>
        <member name="F:Nature.Data.Part.ManagerWebModel._dal">
            <summary>
            数据访问函数库的实例，主要是借用ado.net2.0里的 DbCommand
            </summary>
        </member>
        <member name="M:Nature.Data.Part.ManagerWebModel.#ctor(Nature.Data.DataAccessLibrary)">
            <summary>
            初始化
            </summary>
            <param name="dal">数据访问函数库的实例</param>
        </member>
        <member name="M:Nature.Data.Part.ManagerWebModel.ExecuteFillWebList1(System.String)">
            <summary>
            运行SQl语句，返回IList WebList1  集合
            </summary>
            <param name="sql">查询语句。比如select myName from tableName</param>
            <returns>返回WebList的集合。ID，URL，标题</returns>
        </member>
        <member name="M:Nature.Data.Part.ManagerWebModel.ExecuteFillWebList2(System.String,Nature.Data.Model.WebList2Format)">
            <summary>
            运行SQl语句返回 IList WebList2 集合
            </summary>
            <param name="sql">查询语句。比如select myName from tableName</param>
            <param name="lstFormat">标题的最大字符数、内容简介的最大字符数，一个汉字按照两个字符计算。传入“0”则表示不截取标题。发表时间的格式化。</param>
            <returns>返回WebList2结构的集合。URL，标题，时间，人气，图片名</returns>
        </member>
        <member name="T:Nature.Data.Part.ModifyData">
            <summary>
            处理数据的添加、修改
            </summary>
        </member>
        <member name="F:Nature.Data.Part.ModifyData._dal">
            <summary>
            数据访问函数库的实例，主要是想操作Connection
            </summary>
        </member>
        <member name="M:Nature.Data.Part.ModifyData.#ctor(Nature.Data.DataAccessLibrary)">
            <summary>
            初始化
            </summary>
            <param name="dal">数据访问函数库的实例</param>
        </member>
        <member name="M:Nature.Data.Part.ModifyData.InsertData(System.String,System.String[],System.String[])">
            <summary>
            添加记录。传入表名，字段数组，值数组，返回新生成记录的ID(仅限于MS SQL数据库，且表里有自增字段)
            </summary>
            <param name="tableName">要添加记录的表的名称</param>
            <param name="columnName">字段名数组</param>
            <param name="columnValue">字段对应的值的数组</param>
            <returns></returns>
        </member>
        <member name="M:Nature.Data.Part.ModifyData.InsertData(System.String)">
            <summary>
            根据存储过程的参数的信息，自动拼接参数化的SQL语句，用于添加数据
            </summary>
            <param name="tableName">表名</param>
            <returns></returns>
        </member>
        <member name="M:Nature.Data.Part.ModifyData.UpdateData(System.String,System.String[],System.String[],System.String)">
            <summary>
            修改记录。传入表名，字段数组，值数组 ，修改条件
            </summary>
            <param name="tableName">要修改记录的表的名称</param>
            <param name="columnName">字段名数组</param>
            <param name="columnValue">字段对应的值的数组</param>
            <param name="query">条件 ，加在where 后面的语句</param>
            <returns></returns>
        </member>
        <member name="M:Nature.Data.Part.ModifyData.UpdateData(System.String,System.String)">
            <summary>
            修改记录。传入表名 ，修改条件
            </summary>
            <param name="tableName">要修改记录的表的名称</param>
            <param name="query">条件 ，加在where 后面的语句</param>
            <returns></returns>
        </member>
        <member name="T:Nature.Data.Part.SelectData">
            <summary>
            返回记录集的配件
            </summary>
        </member>
        <member name="F:Nature.Data.Part.SelectData._dal">
            <summary>
            数据访问函数库的实例，主要是想操作Connection
            </summary>
        </member>
        <member name="M:Nature.Data.Part.SelectData.#ctor(Nature.Data.DataAccessLibrary)">
            <summary>
            初始化
            </summary>
            <param name="dal">数据访问函数库的实例</param>
        </member>
        <member name="M:Nature.Data.Part.SelectData.ExecuteFillDataSet(System.String)">
            <summary>
            运行SQL语句、参数化的SQL语句或者存储过程，返回DataSet。
            可以传入多条查询语句，返回的DataSet里会有多个DataTable
            </summary>
            <param name="text">查询语句或者存储过程的名称。
            比如select * from tableName1 select * from tableName2
            或者 Proc_xxxGetDataSet
            </param>
            <returns>返回DataSet</returns>
        </member>
        <member name="M:Nature.Data.Part.SelectData.ExecuteFillDataTable(System.String)">
            <summary>
            运行SQL语句、参数化的SQL语句或者存储过程，返回DataTable记录集
            </summary>
            <param name="text">查询语句或者存储过程的名称。
            比如select * from tableName1 
            或者 Proc_xxxGetDataTable
            </param>
            <returns></returns>
        </member>
        <member name="M:Nature.Data.Part.SelectData.ExecuteStringsBySingleRow(System.String)">
            <summary>
            运行SQl语句返回第一条记录的数组。返回字符串数组
            </summary>
            <param name="text">查询语句。比如select top 1 * from tableName</param>
            <returns></returns>
        </member>
        <member name="M:Nature.Data.Part.SelectData.ExecuteStringsByColumns(System.String)">
            <summary>
            运行SQl语句返回每一条记录的第一个字段的值。返回字符串数组
            </summary>
            <param name="text">查询语句。比如select myName from tableName</param>
            <returns></returns>
        </member>
        <member name="T:Nature.Data.DataType">
            <summary>
            数据库的类型，对应 DataBaseType 
            </summary>
            user:jyk
            time:2013/1/12 11:05
        </member>
        <member name="F:Nature.Data.DataType.Default">
            <summary>
            默认
            </summary>
        </member>
        <member name="F:Nature.Data.DataType.MsSql2000">
            <summary>
            Server SQL 2000 
            </summary>
        </member>
        <member name="F:Nature.Data.DataType.MsSql2005">
            <summary>
            Server SQL 2005+  
            </summary>
        </member>
        <member name="F:Nature.Data.DataType.Access">
            <summary>
            Access 各个版本 
            </summary>
        </member>
        <member name="T:Nature.Data.CommonFactory">
            <summary>
            创建DbConnection、DbCommand、DbDataAdapter、DbParameter实例的工厂
            </summary>
        </member>
        <member name="F:Nature.Data.CommonFactory.ConnectionString">
            <summary>
            默认的连接字符串。从webconfig获取。
            </summary>
        </member>
        <member name="F:Nature.Data.CommonFactory.ProviderName">
            <summary>
            默认的数据库驱动的名称。从webconfig里面的获取。  
            System.Data.SqlClient   可以连接 SQL Sever 2000 、SQL Server 2005等
            System.Data.OleDb       可以连接 Access、Excel等
            System.Data.Odbc        可以连接 Access、Excel等
            </summary>
        </member>
        <member name="F:Nature.Data.CommonFactory.DataType">
            <summary>
            数据库的类型  
            System.Data.SqlClient   可以连接 SQL Sever 2000 、SQL Server 2005等
            System.Data.OleDb       可以连接 Access、Excel等
            System.Data.Odbc        可以连接 Access、Excel等
            </summary>
        </member>
        <member name="F:Nature.Data.CommonFactory.DbProvider">
            <summary>
            生成Connection 等的实例的工厂，ado.net2.0提供
            </summary>
        </member>
        <member name="M:Nature.Data.CommonFactory.CreateConnection(System.String,System.Data.Common.DbProviderFactory)">
            <summary>
            根据数据库的连接方式创建一个Connection的实例，需要传递连接字符串。
            </summary>
            <param name="connectionString">连接字符串</param>
            <param name="dbProvider">DbProviderFactory</param>
            <returns></returns>
        </member>
        <member name="M:Nature.Data.CommonFactory.CreateCommand(System.String,System.Data.Common.DbProviderFactory)">
            <summary>
            根据数据库的连接方式创建一个Command的实例，需要传递连接字符串。
            </summary>
            <param name="connectionString">连接字符串</param>
            <param name="dbProvider">DbProviderFactory</param>
            <returns></returns>
        </member>
        <member name="M:Nature.Data.CommonFactory.CreateDataAdapter(System.Data.Common.DbCommand,System.Data.Common.DbProviderFactory)">
            <summary>
            根据数据库的连接方式创建一个DataAdapter的实例，这个只生成实例，不做其他的设置了。
            </summary>
            <param name="cm">DbCommand</param>
            <param name="dbProvider">DbProviderFactory</param>
            <returns></returns>
        </member>
        <member name="M:Nature.Data.CommonFactory.CreateParameter(System.String,System.Data.Common.DbProviderFactory)">
            <summary>
            根据数据库的连接方式创建一个Parameter的实例。
            </summary>
            <param name="parameterName">存储过程的参数的名称</param>
            <param name="dbProvider">DbProviderFactory</param>
            <returns></returns>
        </member>
        <member name="T:Nature.Data.DalFactory">
            <summary>
            根据数据驱动类型，建立数据访问函数库的工厂
            </summary>
        </member>
        <member name="M:Nature.Data.DalFactory.CreateDal">
            <summary>
            根据web.config里的默认值实例化
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nature.Data.DalFactory.CreateDal(System.String,System.String)">
            <summary>
            根据参数创建实例。
            </summary>
            <param name="connectionString">连接字符串</param>
            <param name="providerName">数据库驱动的名称。System.Data.SqlClient、System.Data.OleDb 、System.Data.Odbc、System.Data.OracleClient等</param>
            <returns></returns>
        </member>
    </members>
</doc>
